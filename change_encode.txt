import os
from chardet import detect
import datetime
import shutil

# 現在時刻
t_delta = datetime.timedelta(hours=9)
JST = datetime.timezone(t_delta, 'JST')
now = datetime.datetime.now(JST)
d = now.strftime('%Y%m%d%H%M%S')   # YYYYMMDDhhmmss形式に書式化
#d = f'{now:%Y%m%d%H%M%S}'  # f文字列
#print(d)  # 20211104173728

# フォルダ名
dirname = 'data'          # 入力フォルダ
outdir  = f'result_{d}'   # 出力フォルダ
os.mkdir(outdir)

# ファイル名
files = ['入力ファイル_euc.txt', 'test.csv', 'test2.csv', '入力ファイル_shift-jis.csv', \
         '入力ファイル_shift-jis.txt', '入力ファイル_unicode.txt', \
         '入力ファイル_utf-8.txt', '入力ファイル_utf-8N.txt']

to_codec = 'utf-8'

# get file encoding type
def get_encoding_type(file):
    with open(file, 'rb') as f:
        rawdata = f.read()
    return detect(rawdata)['encoding']

for filename in files:

    infile = dirname + '\\' + filename
    from_codec = get_encoding_type(infile)

    outfile = outdir + '\\' + filename.split('\.')[0] + '_utf8.txt'
    #print(outfile)

    if from_codec == 'utf-8':
        print(infile, from_codec)
        shutil.copy2(infile, outfile)
    else:
        # add try: except block for reliability
        try:
            with open(infile, 'r', encoding=from_codec) as f, open(outfile, 'w', encoding=to_codec) as e:
                print(infile, from_codec)
                text = f.read()  # for small files, for big use chunks
                print(text)
                e.write(text)

            #os.remove(srcfile)  # remove old encoding file
            #os.rename(trgfile, srcfile)  # rename new encoding
        except UnicodeDecodeError:
            print('Decode Error')
        except UnicodeEncodeError:
            print('Encode Error')
